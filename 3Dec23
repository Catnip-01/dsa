#include <stdio.h>
#include <math.h>

#define SWAP(a, b, t) ((t) = (a), (a) = (b), (b) = (t))
#define MAX_TERMS 101
#define COMPARE(a, b) ((a) < (b)? -1: (a) == (b)? 0: 1)

int selectionSort(int [], int);
int binarySearch(int [], int, int, int);
int compare (int, int);

int main(){
    int arr[MAX_TERMS];
    int n;
    int target;
    int zero = 0;
    printf("enter number of terms needed : ");
    scanf("%d", &n);

    /*generating the random array: */
    for (int i = 0; i < n; i++){
        arr[i] = rand() % 100;
        printf ("%d ", arr[i]);
    }

    /*calling sort function: */
    selectionSort(arr, n);
    printf("\n");

    /*printing the result of the sorted array*/
    for (int i = 0; i < n; i++){
        printf("%d ", arr[i]);
    }

    printf("\nenter the number that you want searched : ");
    scanf("%d", &target);

    int result = binarySearch(arr, target, 0, n);

    printf ("\nthe number %d has been found at index: %d\n", target, result);




}
selectionSort(int arr[], int n){
    int i, j, min, temp;
    for (int i = 0; i < n - 1; i++){
        min = i;
        for (j = i + 1; j < n; j++){
            if (arr[j] < arr[min]){
                
                SWAP(arr[j], arr[min], temp);
                
                
            }
        }
    }
}


int binarySearch(int arr[], int target, int low, int high){
    while (low <= high){
        int mid = (low + high)/2;
        // printf("low : %d\n", low);
        // printf("high : %d\n", high);
        // printf("mid : %d\n", mid);
        int midNum = arr[mid];
        // printf("midnum is : %d\n", midNum);
        int op = compare(midNum, target);
        switch (op){
            case 0:
            // printf("category 1\n");
            return mid;
            break;

            case -1:
            // printf("category 2");
            low = mid + 1;
            break;
            case 1:
            high = mid - 1;
            // printf("category 3");
            break;
            default:
            // printf("doesn't come in any category\n");
            break;

        }
        

    }
    return 100;
}

int compare (int a, int b){
    if (a < b) return -1;
    else if (a == b) return 0;
    else return 1;
}
